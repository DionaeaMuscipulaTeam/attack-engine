#!/usr/bin/python
from subprocess import call
try : 
	import os
except :
	print ("if something went wrong that mean you are missing (os) package \n please install that requirement in order to use the app")
try :
	import platform
except :
	print("installing platform package ... ")
	os.system('sudo pip install platform')
try :
	import platform
except :
	print("installing platform package ... ")
	os.system('sudo pip install platform')
try :
	import subprocess
except :
	print("installing subprocess package ... ")
	os.system('sudo pip install subprocess')
try:
	import lxml
except :
	print("installing lxml package ... ")
	os.system('sudo pip install lxml')
try:
	import bs4
except :
	print("installing bs4 package ... ")
	os.system('sudo pip install bs4')
try:
	import requests
except :
	print("installing requests package ... ")
	os.system('sudo pip install requests')
try:
	import mechanize
except :
	print("installing mechanize package ... ")
	os.system('sudo pip install mechanize')
try:
	import urllib
except :
	print("installing urllib package ... ")
	os.system('sudo pip install urllib')
try:
	import itertools
except :
	print("installing itertools package ... ")
	os.system('sudo pip install itertools')
try:
	import BeautifulSoup
except :
	print("installing BeautifulSoup package ... ")
	os.system('sudo pip install BeautifulSoup')


from subprocess import Popen

Path="~/attack-engine1"
PathInputFile="~/attack-engine1/inputFiles"
PathOutputFile="~/attack-engine1/outputFiles"



if (os.path.exists(Path)=='False'):	
	print "creating directory ..."
	os.system('mkdir ~/attack-engine1')
	os.system(' mkdir ~/attack-engine1/inputFiles')
	os.system(' mkdir ~/attack-engine1/outputFiles')
else :	
	if (os.path.exists(PathInputFile)=='False'):
		os.system(' mkdir ~/attack-engine1/inputFiles')
	else :
		''
	if (os.path.exists(PathOutputFile)=='False'):
		os.system(' mkdir ~/attack-engine1/outputFiles')
	else :
		print ''


Path="~/attack-engine1/inputFiles/bypassLib.txt"
if (os.path.exists(Path)==False):
	os.system("cp bypassLib.txt ~/attack-engine1/inputFiles")

Path="~/attack-engine1/inputFiles/sqlword.txt"
if (os.path.exists(Path)== False ):
	os.system("cp sqlword.txt ~/attack-engine1/inputFiles")

Path="~/attack-engine1/inputFiles/xssword.txt"
if (os.path.exists(Path)== False ):
	os.system("cp xssword.txt ~/attack-engine1/inputFiles")


try: 
	pipegit = Popen("which git", shell=True, stdout=subprocess.PIPE).stdout
	git = pipegit.read()
except: 
	git =""
	print "something went wrong with git "


try: 
	pipedir = Popen("echo ~/arsenal/cmsmap.py", shell=True, stdout=subprocess.PIPE).stdout
	location = pipedir.read()
	pipecms = Popen("ls ~/arsenal/cmsmap.py", shell=True, stdout=subprocess.PIPE).stdout
	cms = pipecms.read()
	if cms != location :
		cms = ""
except: 
	cms =""
	print "something went wrong with cms "



try: 
	pipens = Popen("which nslookup", shell=True, stdout=subprocess.PIPE).stdout
	ns = pipens.read()
except: 
	pipens =""	
	print "something went wrong with nslookup"


if git=="":
	#install git
	print "installing sqlmap ..."
        os.system("sudo apt-get install git")

if os.path.exists('~/Desktop/FinalApp/sqlmap')== 'False':
	#install sql
	print "installing sqlmap ..."
        os.system("sudo wget 'https://github.com/sqlmapproject/sqlmap/tarball/master' --output-document=sqlmap.tar.gz")
	os.system("tar -xvf sqlmap.tar.gz")
	print "SQLMAP is installed ..."
	print "cleaning env ..."
	os.system ("sudo rm -rf sqlmap.tar.gz")
	os.system ("sudo mv sqlmapproject* sqlmap")

if cms=="" :
	#install cms
	print "installing CMSmap ..."
	os.system("mkdir ~/arsenal")
	os.system("git clone https://github.com/Dionach/CMSmap.git ~/arsenal")
	os.system("cd CMSmap")
#	os.system("python cmsmap.py -t http://www.google.com")

if ns=="" :
	#install ns
	print"installing nslookap ..."
	os.system("apt-get install dnsutils")



os.system('sudo chmod -R +x ./*')

