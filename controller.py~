#!/usr/bin/python


#checking env

try :
	import draw
	from Colour import Colour
	from check import checkLink
	from sqlinj import SqlInject
	from xssinj import XSSInject
	from brutehtml import BrutforceHtml
	from check import checkAvailable
	from datagathring import getData
	from datagathring import saveData
	from datagathring import nslookup
	from bypassurl import constructLink
	from bypassurl import getRobotsContents
	from verbTempring import getMethodHttpAttributs
	from toolusageSQLmap import SqlmapCall
	from toolusageCMSmap import CMSmapCall
	from genrateReport import genrateReport
except :
	print "importing problem ...."

#----------------------------------------* 1 insertion du lien *--------------------------------------------------------------------------------
url = raw_input("please provide the url of the website to attack  ? \n")
url = checkLink(url)
while checkAvailable(url) == False :
	url = raw_input("please provide a valid url  ? \n")
	url = checkLink(url)
# ---------------------------------------* 2 collect des informations nessesaires *-------------------------------------------------------------
print " #.................... Data Gathring.............#\n"
data = getData(url)
saveData(data)
nslookup = nslookup(url)
robots = getRobotsContents(url)
adminpanel = constructLink(url)
print "this is admin panel "+adminpanel
RES=[[]]
hhtp_attr = getMethodHttpAttributs(url,RES)
# ---------------------------------------* 3 scan des vulnerabilitees *-------------------------------------------------------------------------
print " #.................... sql and cms  scan.............#\n"
sqlmapresult = SqlmapCall(url)
cmsmapresult = CMSmapCall(url)
# ---------------------------------------* 4 essai d'attaques *--------------------------------------------------------------------------------
print " #.................... sql and xss attack .............#\n"
print "user authentification sql injection ..."
sqlinject_login = SqlInject(url)
print "admin panel injection .."
link=url+adminpanel

sqlinject_admin = SqlInject(link)

print "xss injection ..."
xssinjection=XSSInject(url)


print "Brute Force Html ..."

if link != "" :
	choice = raw_input("would you like to preform a bruteForce html on the admin login panel ? \n please note that this may take a long time to accomplich ! [Y,n] : ")
	if choice=="Y" or choice =="y" or choice=="yes" :
		 bruteforce = BrutforceHtml(adminpanel)



# ---------------------------------------* 5 generation de rapport  *---------------------------------------------------------------------------
genrateReport()

